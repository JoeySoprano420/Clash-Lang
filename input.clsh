section code
start:
    print "Hello from Clash!"
    exit

print "Hello"
input name
let x = 7
if_eq x 7 then print "match"
loop print "again"

let x = 5
print "Hello World"
if_eq x 5 then print "matched"

loop print "infinite"

let x: int = 5
let s: string = "Hello"

input(s)
print(s)

func f(x: int) { return x + 1 }
print(f(4))

import "math"

let x = 0
while (x < 3) { 
  print(x)
  let x = x + 1
}

return 9 + 2

let x = 5
{
  let x = 10
  print(x) ; prints 10
}
print(x) ; prints 5

let result = 2 + 3 * 4

func add(x) { return x + 1 }
add(4)

let x = 2 + 3 * 4
; â†’ postfix: 2 3 4 * +

func add(a, b) { return a + b }
add(2, 3)

let counter = 0;
let limit = 5;

while (counter < limit) {
    print "Looping:";
    print counter;

    if (counter == 3) {
        break;
    }

    counter = counter + 1;
}

fn sum(a, b) {
  return a + b * 2
}

start:
    print "Clashup Compiler Activated!"
    let x = 0
    loop:
        print x
        let x = x + 1
        if_eq x 5 then exit
        goto loop

func add1(n: int) {
    return n + 1
}

print add1(7)
exit

import "math"

struct Vec2 {
    x: int
    y: int
}

let counter = 0
while counter < 10 {
    print counter
    let counter = counter + 1
}

func add(a: int, b: int) {
    return a + b
}

let result = add(5, 7)
print result

func add(a: int, b: int) {
    return a + b
}

func say(msg: string) {
    print msg
}

print 5
let x = 0
while x < 5 {
    print x
    let x = x + 1
}

